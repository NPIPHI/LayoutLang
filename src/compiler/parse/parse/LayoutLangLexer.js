// Generated from LayoutLang.g4 by ANTLR 4.9
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u001e\u00a6\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0003\u0002",
    "\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0005",
    "\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0005\u0006",
    "H\n\u0006\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0005\u0007",
    "N\n\u0007\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0005\bU\n\b\u0003",
    "\t\u0003\t\u0003\t\u0003\n\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003",
    "\u000b\u0003\f\u0003\f\u0003\f\u0003\r\u0003\r\u0003\r\u0003\u000e\u0003",
    "\u000e\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0010\u0003",
    "\u0010\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003",
    "\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003",
    "\u0014\u0003\u0014\u0003\u0014\u0003\u0015\u0003\u0015\u0003\u0015\u0003",
    "\u0015\u0003\u0015\u0003\u0016\u0003\u0016\u0003\u0017\u0003\u0017\u0003",
    "\u0018\u0003\u0018\u0003\u0019\u0003\u0019\u0003\u001a\u0006\u001a\u008a",
    "\n\u001a\r\u001a\u000e\u001a\u008b\u0003\u001b\u0006\u001b\u008f\n\u001b",
    "\r\u001b\u000e\u001b\u0090\u0003\u001b\u0003\u001b\u0006\u001b\u0095",
    "\n\u001b\r\u001b\u000e\u001b\u0096\u0003\u001c\u0003\u001c\u0007\u001c",
    "\u009b\n\u001c\f\u001c\u000e\u001c\u009e\u000b\u001c\u0003\u001d\u0006",
    "\u001d\u00a1\n\u001d\r\u001d\u000e\u001d\u00a2\u0003\u001d\u0003\u001d",
    "\u0002\u0002\u001e\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b",
    "\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b",
    "\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014\'\u0015)\u0016+",
    "\u0017-\u0018/\u00191\u001a3\u001b5\u001c7\u001d9\u001e\u0003\u0002",
    "\b\u0005\u0002\'\',,11\u0004\u0002>>@@\u0003\u00022;\u0004\u0002C\\",
    "c|\u0006\u00022;C\\aac|\u0005\u0002\u000b\f\u000f\u000f\"\"\u0002\u00ae",
    "\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002",
    "\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002",
    "\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002",
    "\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002",
    "\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002",
    "\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002",
    "\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002",
    "\u0002\u001f\u0003\u0002\u0002\u0002\u0002!\u0003\u0002\u0002\u0002",
    "\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002\u0002\u0002\u0002",
    "\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002\u0002\u0002\u0002+\u0003",
    "\u0002\u0002\u0002\u0002-\u0003\u0002\u0002\u0002\u0002/\u0003\u0002",
    "\u0002\u0002\u00021\u0003\u0002\u0002\u0002\u00023\u0003\u0002\u0002",
    "\u0002\u00025\u0003\u0002\u0002\u0002\u00027\u0003\u0002\u0002\u0002",
    "\u00029\u0003\u0002\u0002\u0002\u0003;\u0003\u0002\u0002\u0002\u0005",
    "=\u0003\u0002\u0002\u0002\u0007?\u0003\u0002\u0002\u0002\tA\u0003\u0002",
    "\u0002\u0002\u000bG\u0003\u0002\u0002\u0002\rM\u0003\u0002\u0002\u0002",
    "\u000fT\u0003\u0002\u0002\u0002\u0011V\u0003\u0002\u0002\u0002\u0013",
    "Y\u0003\u0002\u0002\u0002\u0015\\\u0003\u0002\u0002\u0002\u0017_\u0003",
    "\u0002\u0002\u0002\u0019b\u0003\u0002\u0002\u0002\u001be\u0003\u0002",
    "\u0002\u0002\u001dg\u0003\u0002\u0002\u0002\u001fi\u0003\u0002\u0002",
    "\u0002!m\u0003\u0002\u0002\u0002#t\u0003\u0002\u0002\u0002%v\u0003\u0002",
    "\u0002\u0002\'x\u0003\u0002\u0002\u0002){\u0003\u0002\u0002\u0002+\u0080",
    "\u0003\u0002\u0002\u0002-\u0082\u0003\u0002\u0002\u0002/\u0084\u0003",
    "\u0002\u0002\u00021\u0086\u0003\u0002\u0002\u00023\u0089\u0003\u0002",
    "\u0002\u00025\u008e\u0003\u0002\u0002\u00027\u0098\u0003\u0002\u0002",
    "\u00029\u00a0\u0003\u0002\u0002\u0002;<\u0007/\u0002\u0002<\u0004\u0003",
    "\u0002\u0002\u0002=>\u0007~\u0002\u0002>\u0006\u0003\u0002\u0002\u0002",
    "?@\t\u0002\u0002\u0002@\b\u0003\u0002\u0002\u0002AB\u0007-\u0002\u0002",
    "B\n\u0003\u0002\u0002\u0002CD\u0007>\u0002\u0002DH\u0007>\u0002\u0002",
    "EF\u0007@\u0002\u0002FH\u0007@\u0002\u0002GC\u0003\u0002\u0002\u0002",
    "GE\u0003\u0002\u0002\u0002H\f\u0003\u0002\u0002\u0002IJ\u0007?\u0002",
    "\u0002JN\u0007?\u0002\u0002KL\u0007#\u0002\u0002LN\u0007?\u0002\u0002",
    "MI\u0003\u0002\u0002\u0002MK\u0003\u0002\u0002\u0002N\u000e\u0003\u0002",
    "\u0002\u0002OP\u0007>\u0002\u0002PU\u0007?\u0002\u0002QR\u0007@\u0002",
    "\u0002RU\u0007?\u0002\u0002SU\t\u0003\u0002\u0002TO\u0003\u0002\u0002",
    "\u0002TQ\u0003\u0002\u0002\u0002TS\u0003\u0002\u0002\u0002U\u0010\u0003",
    "\u0002\u0002\u0002VW\u0007(\u0002\u0002WX\u0007(\u0002\u0002X\u0012",
    "\u0003\u0002\u0002\u0002YZ\u0007~\u0002\u0002Z[\u0007~\u0002\u0002[",
    "\u0014\u0003\u0002\u0002\u0002\\]\u0007/\u0002\u0002]^\u0007@\u0002",
    "\u0002^\u0016\u0003\u0002\u0002\u0002_`\u0007?\u0002\u0002`a\u0007@",
    "\u0002\u0002a\u0018\u0003\u0002\u0002\u0002bc\u0007h\u0002\u0002cd\u0007",
    "p\u0002\u0002d\u001a\u0003\u0002\u0002\u0002ef\u0007=\u0002\u0002f\u001c",
    "\u0003\u0002\u0002\u0002gh\u0007?\u0002\u0002h\u001e\u0003\u0002\u0002",
    "\u0002ij\u0007n\u0002\u0002jk\u0007g\u0002\u0002kl\u0007v\u0002\u0002",
    "l \u0003\u0002\u0002\u0002mn\u0007t\u0002\u0002no\u0007g\u0002\u0002",
    "op\u0007v\u0002\u0002pq\u0007w\u0002\u0002qr\u0007t\u0002\u0002rs\u0007",
    "p\u0002\u0002s\"\u0003\u0002\u0002\u0002tu\u0007<\u0002\u0002u$\u0003",
    "\u0002\u0002\u0002vw\u0007.\u0002\u0002w&\u0003\u0002\u0002\u0002xy",
    "\u0007k\u0002\u0002yz\u0007h\u0002\u0002z(\u0003\u0002\u0002\u0002{",
    "|\u0007g\u0002\u0002|}\u0007n\u0002\u0002}~\u0007u\u0002\u0002~\u007f",
    "\u0007g\u0002\u0002\u007f*\u0003\u0002\u0002\u0002\u0080\u0081\u0007",
    "*\u0002\u0002\u0081,\u0003\u0002\u0002\u0002\u0082\u0083\u0007+\u0002",
    "\u0002\u0083.\u0003\u0002\u0002\u0002\u0084\u0085\u0007}\u0002\u0002",
    "\u00850\u0003\u0002\u0002\u0002\u0086\u0087\u0007\u007f\u0002\u0002",
    "\u00872\u0003\u0002\u0002\u0002\u0088\u008a\t\u0004\u0002\u0002\u0089",
    "\u0088\u0003\u0002\u0002\u0002\u008a\u008b\u0003\u0002\u0002\u0002\u008b",
    "\u0089\u0003\u0002\u0002\u0002\u008b\u008c\u0003\u0002\u0002\u0002\u008c",
    "4\u0003\u0002\u0002\u0002\u008d\u008f\t\u0004\u0002\u0002\u008e\u008d",
    "\u0003\u0002\u0002\u0002\u008f\u0090\u0003\u0002\u0002\u0002\u0090\u008e",
    "\u0003\u0002\u0002\u0002\u0090\u0091\u0003\u0002\u0002\u0002\u0091\u0092",
    "\u0003\u0002\u0002\u0002\u0092\u0094\u00070\u0002\u0002\u0093\u0095",
    "\t\u0004\u0002\u0002\u0094\u0093\u0003\u0002\u0002\u0002\u0095\u0096",
    "\u0003\u0002\u0002\u0002\u0096\u0094\u0003\u0002\u0002\u0002\u0096\u0097",
    "\u0003\u0002\u0002\u0002\u00976\u0003\u0002\u0002\u0002\u0098\u009c",
    "\t\u0005\u0002\u0002\u0099\u009b\t\u0006\u0002\u0002\u009a\u0099\u0003",
    "\u0002\u0002\u0002\u009b\u009e\u0003\u0002\u0002\u0002\u009c\u009a\u0003",
    "\u0002\u0002\u0002\u009c\u009d\u0003\u0002\u0002\u0002\u009d8\u0003",
    "\u0002\u0002\u0002\u009e\u009c\u0003\u0002\u0002\u0002\u009f\u00a1\t",
    "\u0007\u0002\u0002\u00a0\u009f\u0003\u0002\u0002\u0002\u00a1\u00a2\u0003",
    "\u0002\u0002\u0002\u00a2\u00a0\u0003\u0002\u0002\u0002\u00a2\u00a3\u0003",
    "\u0002\u0002\u0002\u00a3\u00a4\u0003\u0002\u0002\u0002\u00a4\u00a5\b",
    "\u001d\u0002\u0002\u00a5:\u0003\u0002\u0002\u0002\u000b\u0002GMT\u008b",
    "\u0090\u0096\u009c\u00a2\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class LayoutLangLexer extends antlr4.Lexer {

    static grammarFileName = "LayoutLang.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'-'", "'|'", null, "'+'", null, null, null, 
                         "'&&'", "'||'", "'->'", "'=>'", "'fn'", "';'", 
                         "'='", "'let'", "'return'", "':'", "','", "'if'", 
                         "'else'", "'('", "')'", "'{'", "'}'" ];
	static symbolicNames = [ null, "MINUS", "PIPE", "BINARYOP0", "BINARYOP1", 
                          "BINARYOP2", "BINARYOP3", "BINARYOP4", "BINARYOP5", 
                          "BINARYOP6", "ARROW", "FATARROW", "FUNCTION", 
                          "SEMICOLON", "EQ", "LET", "RETURN", "COLON", "COMMA", 
                          "IF", "ELSE", "LEFTPAREN", "RIGHTPAREN", "LEFTCURLY", 
                          "RIGHTCURLY", "INT", "FLOAT", "IDENTIFIER", "WS" ];
	static ruleNames = [ "MINUS", "PIPE", "BINARYOP0", "BINARYOP1", "BINARYOP2", 
                      "BINARYOP3", "BINARYOP4", "BINARYOP5", "BINARYOP6", 
                      "ARROW", "FATARROW", "FUNCTION", "SEMICOLON", "EQ", 
                      "LET", "RETURN", "COLON", "COMMA", "IF", "ELSE", "LEFTPAREN", 
                      "RIGHTPAREN", "LEFTCURLY", "RIGHTCURLY", "INT", "FLOAT", 
                      "IDENTIFIER", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

LayoutLangLexer.EOF = antlr4.Token.EOF;
LayoutLangLexer.MINUS = 1;
LayoutLangLexer.PIPE = 2;
LayoutLangLexer.BINARYOP0 = 3;
LayoutLangLexer.BINARYOP1 = 4;
LayoutLangLexer.BINARYOP2 = 5;
LayoutLangLexer.BINARYOP3 = 6;
LayoutLangLexer.BINARYOP4 = 7;
LayoutLangLexer.BINARYOP5 = 8;
LayoutLangLexer.BINARYOP6 = 9;
LayoutLangLexer.ARROW = 10;
LayoutLangLexer.FATARROW = 11;
LayoutLangLexer.FUNCTION = 12;
LayoutLangLexer.SEMICOLON = 13;
LayoutLangLexer.EQ = 14;
LayoutLangLexer.LET = 15;
LayoutLangLexer.RETURN = 16;
LayoutLangLexer.COLON = 17;
LayoutLangLexer.COMMA = 18;
LayoutLangLexer.IF = 19;
LayoutLangLexer.ELSE = 20;
LayoutLangLexer.LEFTPAREN = 21;
LayoutLangLexer.RIGHTPAREN = 22;
LayoutLangLexer.LEFTCURLY = 23;
LayoutLangLexer.RIGHTCURLY = 24;
LayoutLangLexer.INT = 25;
LayoutLangLexer.FLOAT = 26;
LayoutLangLexer.IDENTIFIER = 27;
LayoutLangLexer.WS = 28;



